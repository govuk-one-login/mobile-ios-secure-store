name: iOS Pull Request

on:
  pull_request:
    types: [ opened, reopened, synchronize, ready_for_review ]
    branches: [ main ]
    
concurrency: 
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build and Test default scheme using any available iPhone simulator
    if: github.event.pull_request.draft == false
    runs-on: macos-13

    steps:
      - name: Add path globally
        run: echo "/usr/local/bin" >> $GITHUB_PATH

      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: 'true'
          fetch-depth: 0
          
      - name: Run Linter
        run: |
          swiftlint --strict
            
      - name: Build and Test
        run: |
            xcodebuild -scheme SecureStore-Demo test -destination "platform=iOS Simulator,name=iPhone 14,OS=latest" -testPlan UnitTestPlan \
            -enableCodeCoverage YES -resultBundlePath result.xcresult
            
      - name: Run SonarCloud Scanning
        run: |
          bash xccov-to-sonarqube-generic.sh result.xcresult/ >Coverage.xml
          
          brew install sonar-scanner
          
          pull_number=$(jq --raw-output .pull_request.number "$GITHUB_EVENT_PATH")
          
          sonar-scanner \
            -Dsonar.token=$SONAR_TOKEN \
            -Dsonar.coverageReportPaths="Coverage.xml" \
            -Dsonar.pullrequest.key=$pull_number \
            -Dsonar.pullrequest.branch=${{github.head_ref}} \
            -Dsonar.pullrequest.base=${{github.base_ref}}
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Check SonarCloud Results
        uses: sonarsource/sonarqube-quality-gate-action@master
        # Force to fail step after specific time
        timeout-minutes: 5
        env:
         SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          
